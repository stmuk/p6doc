=begin pod

=TITLE class Slip

=SUBTITLE A kind of List that automatically flattens into an outer container

    class Slip is List { ... }

A C<Slip> is a L<List|/type/List> that automatically flatten into an outer List (or other
list-like container or iterable).

For example it allows you to write a L<map> that produces more than one value
into the result without nesting:

    say <a b c>.map({ ($_, $_.uc).Slip }).join('|');        # a|A|b|B|c|C

In contrast, when returning an oridinar List, the resulting list is nested:

    say <a b c>.map({ $_, $_.uc }).join('|');               # a A|b B|c C

To create a C<Slip>, either coerce another list-like type to it by calling the
C<Slip> method, or use the C<slip> subroutine:

    .say for gather {
        take slip(1, 2);
    }

=head1 Methods

=head2 sub slip

    sub slip(*@) returns Slip:D

Creates a L<Slip|/type/Slip> from its arguments.

=end pod
